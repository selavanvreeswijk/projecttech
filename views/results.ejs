<!DOCTYPE html>
<html lang="en ">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Results</title>
    <link rel="stylesheet" href="/style.css">
   

    <%- include('partials/header') %>   

    <style>
        h1{

             margin-bottom: 1em;
            }


        #plantList{
            display: flex;
            flex-direction: column;
            align-items: center;

            margin-bottom: 1em;
            text-align: center;

        }


        /* .radio-container{
            display: grid;
            grid-template-columns: 1.66em 1.66em 1fr 1.66em 1.66em;
            grid-auto-flow: column;

            column-gap: 1em;
            margin: 0 1em 1em 1em;

            position: relative;
            width: 91vw;
            max-width: 59.1em;
        } */


        /* input[type="radio"]{
            display: none;
        } */


        /* ul.list-view{
            display: grid; 
            grid-gap: var(--white-space);
            margin: 0 1em;
        }


        ul.list-view li{
            list-style-type: none;
        } */


        /* grid-view template */
        /* ul.grid-view{
            display: grid;
            width: min(92%, 60em);
            grid-gap: var(--white-space);
            margin: 0 1em;
            grid-template-columns: calc((100% - var(--white-space)) / 2) 
                                calc((100% - var(--white-space)) / 2);


        }


        ul.grid-view li{
            grid-template-columns: 1fr;
            list-style-type: none;
        }


        ul.list-view article div {
            height: 3em;
        } */

        /* Grotere hoogte voor grid-view */
        /* ul.grid-view article div {
            height: 5em;
        } */

        /* styling radio buttons */
        /* .custom-radio-list{
            width: 1.66em;
            height: 1.66em;
            border-radius: .2em;
            padding: 0;

            grid-column: 5 / 6;

            background: var(--color-background-inputfield);
            border: .07em solid var(--color-lines);

        }


        .custom-radio-list:has(input:checked){
            background: var(--color-logo);
        }


        .custom-radio-grid{
            display: grid;
            grid-template-columns: 1fr 1fr;

            grid-column: 4 / 5;

            width: 1.66em;
            height: 1.36em;
            gap: .2em;
            padding: 0;
        }

        .custom-radio-grid span:first-of-type{
            grid-row: 1 / 2;
            grid-column: 1 / 2;
        }

        .custom-radio-grid span:nth-of-type(2){
            grid-row: 1 / 2;
            grid-column: 2 / 3;
        }

        .custom-radio-grid span:nth-of-type(3){
            grid-row: 2 / 3;
            grid-column: 1 / 2;
        }

        .custom-radio-grid span:nth-of-type(4){
            grid-row: 2 / 3;
            grid-column: 2 / 3;
        }


        .custom-radio-grid span{
            height: .65em;

            border-radius: .1em;
            background: var(--color-background-inputfield);
            border: .07em solid var(--color-lines);
        }


        .custom-radio-grid:has(input:checked) span{
            background: var(--color-logo);
        } */


    </style>
</head>

<body>
    <main id="plantList">

        <h1>Results</h1>

        <%- include ('partials/container') %>

            <ul class="grid-view list" id="list-view-plants">

                <% plants.forEach(plant => { %>
                   <li>

                    <span class="plant-names">
                        <%- include('partials/cards', { plant: plant }) %>
                    </span>
                     
                   </li>
               <% }) %> 
   
           </ul>

      
    </main>

    <footer>
        <%- include('partials/footer') %> 
    </footer>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/list.js/2.3.1/list.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const favButton = document.querySelectorAll('.favorite-btn')
            
            favButton.forEach(button => {
                const plantId = button.dataset.plantId
                checkIfFavorite(plantId, button);
            })
        })

        async function checkIfFavorite(plantId, button) {
            try {
                const response = await fetch(`/is-favorite/${plantId}`);
                const result = await response.json();

                if(result.isFavorite) {
                    console.log("is favoriet!")
                    button.querySelector('.cls-2').classList.add('clicked')
                }
            } catch (error){
                        console.error('Error checking favorite status:', error);
            }
        }


        //zoekfunctie
        let options = {
            valueNames: ['plant-names']
        }
        let plantList = new List('plantList', options);

        // Sorteerknoppen activeren
        document.getElementById('A-Z').addEventListener('change', function () {
            plantList.sort('plant-names', { order: "desc" });
        });

        document.getElementById('Z-A').addEventListener('change', function () {
            plantList.sort('plant-names', { order: "asc" });
        });

        
            

         //planten filteren op basis van de zoekterm
         function filterPlants(searchTerm) {
            const filteredPlants = plantsData.filter(plant =>{
                const commonName = plant['Common name']; 

                //controleer of CommonName een string is voordat toLowerCase wordt aangeroepen
                if (typeof commonName === 'string'){
                    return commonName.toLowerCase().includes(searchTerm.toLowerCase());
                } else {
                    //als commonName geen string is, retourneer false
                    return false;
                }     
            }); 

        if (filteredPlants.length > 0) {
                renderPlantList(filteredPlants);
        } else {
                renderEmptyState();
            }
        }

        function renderEmptyState() { // kijken hoe dit op een andere manier kan!
            const listElement = document.querySelector('#list-view-plants');
            listElement.innerHTML = '<p>No plants founds</p>'
        }

            //toLowerCase() maakt de functie hoofletterongevoelig
            //includes() checkt of de plantnaam de zoekterm bevat
            // renderPlantList(filteredPlants); //update de lijst met gefilterde planten
       



        const sortButton = document.getElementById('sort-btn');
        const sortOptions = document.getElementById('sort-options');
        const filterButton = document.getElementById('filter-btn');
        const filterOptions = document.getElementById('filter-options');

        const sortPaths = sortButton.querySelectorAll('svg path');
        const filterIcon = filterButton.querySelector('svg path');


        // Toggle voor sorteren
        sortButton.addEventListener('click', function (event) {
            event.stopPropagation();
            sortOptions.classList.toggle('hidden');
            sortButton.classList.toggle('active');
            sortPaths.forEach(path => path.classList.toggle('active')); 

            filterOptions.classList.add('hidden');
            filterButton.classList.remove('active');
            filterIcon.classList.remove('active');
        });

        // Toggle voor filteren
        filterButton.addEventListener('click', function (event) {
            event.stopPropagation();
            filterOptions.classList.toggle('hidden');
            filterButton.classList.toggle('active');
            filterIcon.classList.toggle('active'); 

            sortOptions.classList.add('hidden');
            sortButton.classList.remove('active');
            sortPaths.forEach(path => path.classList.remove('active'));
        });

        // Klik buiten een dropdown om deze te sluiten
        document.addEventListener('click', function (event) {
            if (!sortButton.contains(event.target) && !sortOptions.contains(event.target)) {
                sortOptions.classList.add('hidden');
                sortButton.classList.remove('active');
                sortPaths.forEach(path => path.classList.remove('active'));
            }
            if (!filterButton.contains(event.target) && !filterOptions.contains(event.target)) {
                filterOptions.classList.add('hidden');
                filterButton.classList.remove('active');
                filterIcon.classList.remove('active');
            }
        });

        document.querySelectorAll('.favorite-btn').forEach(button => {
            button.addEventListener('click', function (event){
                event.preventDefault(); // Voorkom dat de `<a>` link wordt gevolgd
                this.querySelector('.cls-2').classList.toggle('clicked');
            });
        });


    </script>
    <script src="/script.js" defer></script>  
</body>
</html>